// Test minimaliste pour v√©rifier la connexion Neynar
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import dotenv from 'dotenv';

// Afficher un message de base pour v√©rifier que la sortie console fonctionne
console.log('üîç Test minimaliste Neynar - D√©marrage');

try {
  // Charger le .env manuellement
  const __dirname = path.dirname(fileURLToPath(import.meta.url));
  const envPath = path.resolve(__dirname, '../.env');
  const envConfig = dotenv.parse(fs.readFileSync(envPath));
  
  console.log('üìã Variables d\'environnement:');
  console.log('- NEYNAR_API_KEY:', envConfig.NEYNAR_API_KEY ? '‚úÖ Pr√©sente' : '‚ùå Manquante');
  console.log('- NEYNAR_SIGNER_UUID:', envConfig.NEYNAR_SIGNER_UUID ? '‚úÖ Pr√©sent' : '‚ùå Manquant');
  
  // Tester la cr√©ation du client Neynar directement
  console.log('\nüîå Test de connexion Neynar');
  
  // Importer les d√©pendances Neynar
  import { NeynarAPIClient } from "@neynar/nodejs-sdk";
  
  // Cr√©er un client minimal
  const neynarClient = new NeynarAPIClient({
    apiKey: envConfig.NEYNAR_API_KEY
  });
  
  // Test simple: obtenir un utilisateur par FID (1 = Dan Romero, fondateur de Farcaster)
  console.log('üì° Requ√™te de test vers l\'API Neynar...');
  neynarClient.fetchBulkUsers({fids: [1]})
    .then(result => {
      console.log('‚úÖ Connexion √† l\'API r√©ussie!');
      console.log(`üë§ Utilisateur r√©cup√©r√©: ${result.users[0].username}`);
    })
    .catch(error => {
      console.error('‚ùå Erreur de connexion √† l\'API:', error.message);
    });

} catch (error) {
  console.error('‚ùå Erreur g√©n√©rale:', error);
}
